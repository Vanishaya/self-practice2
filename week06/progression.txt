1. เขียนฟังก์ชัน filterAndTransform(arr, filterFn, transformFn) รับอาเรย์ arr
ใช้ filterFn เพื่อกรองค่า ใช้ transformFn เพื่อแปลงค่าที่เหลือ คืนค่าอาเรย์ใหม่
.filter() จะกรองค่าที่ตรงเงื่อนไข  .map() จะนำค่าที่เหลือไปแปลงต่อ 

2.เขียนโค้ดเพิ่มคะแนนทุกคนขึ้น 5 โดย ห้ามแก้ไขออบเจ็กต์เดิม และเก็บไว้ในอาเรย์ใหม่ชื่อ updatedStudents
ใช้ spread operator (...student) เพื่อคัดลอกออบเจ็กต์เดิมแล้วปรับเฉพาะค่าที่ต้องการ (score)
การไม่แก้ไขของเดิมคือแนวคิดหลักของ Immutability

3.ให้เขียนฟังก์ชันชื่อ createFilter(threshold)ซึ่งจะ คืนค่าฟังก์ชันอีกตัวหนึ่ง ที่ใช้กรองอาเรย์ตัวเลข 
โดยเก็บเฉพาะค่าที่ มากกว่าหรือเท่ากับ threshold

4.เขียนฟังก์ชัน composeThree(f1, f2, f3)ที่รับฟังก์ชัน 3 ตัว แล้วคืนค่าฟังก์ชันใหม่ซึ่งเมื่อเรียกใช้งาน 
จะเรียกฟังก์ชันทั้งสามต่อเนื่องกัน

5.เขียนฟังก์ชัน createCounter(start)ให้เริ่มนับจากค่า startคืนค่าเป็นวัตถุที่มีเมธอด 3 ตัว
inc() เพิ่มค่า 1 dec() ลดค่า 1 reset() กลับไปเริ่มที่ start
ตัวแปร count ถูก “จำค่าไว้ใน scope” ของฟังก์ชัน createCounter
ฟังก์ชัน inc, dec, reset เข้าถึง count ได้แม้ภายนอกจะหมดอายุไปแล้ว